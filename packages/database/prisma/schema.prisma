generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum AchievementType {
  LNN
  LNB_PLUS @map("lnb_plus")
  LNB
  L1CC
}

// User model with enhanced fields
model User {
  id              BigInt    @id @default(autoincrement())
  public_uuid     String    @unique @default(uuid())
  email           String    @unique
  name            String?
  password        String
  role            Role      @default(USER)
  danmaku_points  Int       @default(0)
  twitterHandle   String?
  youtubeChannel  String?
  twitchChannel   String?
  discord         String?
  country         String?
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")
  
  // Relations
  clearEntries    ClearEntry[]

  @@map("users")
}

// Clear entry model for tracking achievements
model ClearEntry {
  id              BigInt          @id @default(autoincrement())
  public_uuid     String          @unique @default(uuid())
  userId          BigInt          @map("user_id")
  shotType        String
  game            String
  achievementType AchievementType
  danmaku_points  Int             @default(0)
  replayLink      String?
  videoLink       String?
  verified        Boolean         @default(false)
  dateAchieved    DateTime?
  createdAt       DateTime        @default(now()) @map("created_at")
  updatedAt       DateTime        @updatedAt @map("updated_at")
  
  // Relations
  createdBy       User            @relation(fields: [userId], references: [id])

  @@map("clear_entries")
}